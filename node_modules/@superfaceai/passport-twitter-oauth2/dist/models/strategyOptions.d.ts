import { StrategyOptions as PassportOAuth2StrategyOptions, StrategyOptionsWithRequest as PassportOAuth2StrategyOptionsWithRequest } from 'passport-oauth2';
interface TwitterStrategyOptionsBase {
    clientType: 'public' | 'confidential' | 'private';
    clientID: string;
    clientSecret: string;
    userProfileURL?: string | undefined;
    authorizationURL?: string | undefined;
    tokenURL?: string | undefined;
}
/**
 * @public
 */
export interface StrategyOptions extends TwitterStrategyOptionsBase, Omit<PassportOAuth2StrategyOptions, 'authorizationURL' | 'tokenURL'> {
    passReqToCallback?: false | undefined;
}
/**
 * @public
 */
export interface StrategyOptionWithRequest extends TwitterStrategyOptionsBase, Omit<PassportOAuth2StrategyOptionsWithRequest, 'authorizationURL' | 'tokenURL'> {
    passReqToCallback: true;
}
/**
 * @public
 */
export interface AuthenticateOptions {
    scope?: string[] | string | undefined;
    state?: unknown | undefined;
    callbackURL?: string | undefined;
    failureRedirect?: string | undefined;
    failureMessage?: boolean | undefined;
}
export {};
